name: CI/CD

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_REPO: simple-timeservice

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: simple-timeservice-serverless-iac  # Add this line to access environment secrets
    outputs:
      IMAGE_TAG: ${{ steps.build.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        id: build
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ECR_REPO:$IMAGE_TAG ./app
          docker tag $ECR_REPO:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${ECR_REPO}:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPO}:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

  terraform:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: simple-timeservice-serverless-iac  # Add this line to access environment secrets
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: Terraform Init
        run: |
          terraform init
          terraform validate

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="image_tag=${{ needs.build-and-push.outputs.IMAGE_TAG }}"
